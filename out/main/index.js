"use strict";const P=require("node:events"),C=require("node:process"),b=require("node:util");class k{constructor(t,n,o={}){this.Wrapper=t,this.Session=n,this.config=o,this.wrapperEmitter=new P.EventEmitter,this.#e=new Map}#e;logFn({argArray:t,applyRet:n,key:o}){if(!this.config.log||typeof this.config.log!="boolean"&&!this.config.log.test(o))return;const s=this.config.logDepth,a={inspect(e){return b.inspect(e,{depth:s,colors:!0})},json(e){return JSON.stringify(e,null,2)}}[this.config.logType??"inspect"];if(console.log("-----------------------------------------------"),console.log(`${o} 被调用`),t.length&&console.log("参数: ",a(t)),n instanceof Promise)console.log("返回值为 Promise，请观察后续打印内容"),n.then(e=>{console.log(`${o} 返回值: `),console.log(a(e))},e=>{console.log(`${o} 返回值: `),console.log(a(e))});else if(console.log("返回值: ",a(n)),typeof n=="object"&&n){const e=Object.getOwnPropertyNames(n);e.length&&console.log("返回值 keys: ",a(e)),console.log("原型 keys: ",a(Object.getOwnPropertyNames(Object.getPrototypeOf(n))))}}hookInstance({instance:t,rootKey:n}){return new Proxy(t,{get:(o,s,i)=>{const a=Reflect.get(t,s,i);if(typeof a!="function")return a;const e=`${n}/${s}`;return(...c)=>{if(this.config.eventBlacklist?.some(r=>typeof r=="string"?e===r:r.test(e)))return;if(e.endsWith("Listener"))if(s.startsWith("add")){const r=this.#e.get(e);c[0]=this.hookInstance({instance:c[0],rootKey:e}),r?r.add(c[0]):this.#e.set(e,new Set([c[0]]))}else{const r=this.#e.get(e.replace("/remove","/add"));r&&r.delete(c[0])}c=this.config.eventInterceptors?.[e]?.(c)??c;let g=t[s](...c);if(g=this.config.eventInterceptors?.[`${e}:response`]?.({applyRet:g,params:c})??g,e.endsWith("Service")&&(g=this.hookInstance({instance:g,rootKey:e})),g instanceof Promise)g.then(r=>{const d={applyRet:r,params:c};this.wrapperEmitter.emit(e,d)},r=>{const d={applyRet:r,params:c};this.wrapperEmitter.emit(e,d)});else{const r={applyRet:g,params:c};this.wrapperEmitter.emit(e,r)}return this.logFn({argArray:c,applyRet:g,key:e}),g}}})}dispatchListener(t,n){const o=t.lastIndexOf("/"),s=t.slice(0,o),i=t.slice(o+1),a=this.#e.get(s);if(!a)throw new Error("监听器尚未绑定，请确认参数是否正确");return[...a].map(e=>{if(!e[i])throw new Error("未找到目标监听器");return e[i](...n)})}}const f=new k,x=(l={})=>{const{promise:t,resolve:n}=Promise.withResolvers();return f.config=l,C.dlopen=new Proxy(C.dlopen,{apply(o,s,i){const[,a]=i,e=Reflect.apply(o,s,i);if(a.includes("wrapper.node")){const c=i[0].exports,N=new Proxy(c,{get(g,r,d){const h=Reflect.get(c,r,d);return typeof h!="function"?h:new Proxy(function(){},{get(Q,u,y){const p=Reflect.get(h,u,y);return typeof p!="function"?p:new Proxy(p,{apply(O,R,L){const w=`${r}/${u}`,m=Reflect.apply(O,R,L);if(f?.logFn({argArray:L,applyRet:m,key:w}),typeof m!="object")return m;const j=f.hookInstance({instance:m,rootKey:w});return w==="NodeIQQNTWrapperSession/create"&&(f.Session=j),j}})},construct(Q,u,y){const p=Reflect.construct(h,u,y);return f?.logFn({key:r,applyRet:p,argArray:u}),f.hookInstance({instance:p,rootKey:r})}})}});f.Wrapper=i[0].exports=N}return e}}),f.wrapperEmitter.once("NodeIQQNTWrapperSession/create/getMsgService",()=>{n(f)}),t};var v=(l=>(l.sendLog="NodeIQQNTWrapperSession/create/getNodeMiscService/sendLog",l.onQRCodeLoginSucceed="NodeIKernelLoginService/get/addKernelLoginListener/onQRCodeLoginSucceed",l.onRecvMsg="NodeIQQNTWrapperSession/create/getMsgService/addKernelMsgListener/onRecvMsg",l.sendMsg="NodeIQQNTWrapperSession/create/getMsgService/sendMsg",l.fetchUnitedCommendConfig="NodeIQQNTWrapperSession/create/getUnitedConfigService/fetchUnitedCommendConfig",l))(v||{});const I={counter:0},W="https://raw.githubusercontent.com/adproqwq/LiteLoaderQQNT-Manifest-JsonSchema/main/manifest.schema.json",$=4,T="extension",U="敲死那个粉色头像",E="liteLoader-taptaptap",_="敲一敲，身体好",K="0.0.1",q=[{name:"Nyaruhodo",link:"https://github.com/nyaruhodoo"}],D=[],F=["win32","linux","darwin"],J={renderer:"./out/renderer/index.js",main:"./out/main/index.js",preload:"./out/preload/index.js"},S={$schema:W,manifest_version:$,type:T,name:U,slug:E,description:_,version:K,authors:q,dependencies:D,platform:F,injects:J};class M{static async getConfig(){const t=await LiteLoader.api.config.get(S.slug,I);return this.mergeConfig(t,I)}static async updateConfig(t){await LiteLoader.api.config.set(S.slug,t),this.log("Config已更新",JSON.stringify(t,null,2))}static mergeConfig(t,n){const o=structuredClone(n);for(const[s,i]of Object.entries(t))if(Object.hasOwn(o,s)&&Object.prototype.toString.call(i)===Object.prototype.toString.call(o[s])){if(Array.isArray(i)){o[s]=[...new Set([...i,...o[s]])];continue}if(typeof i=="object"&&i){o[s]=this.mergeConfig(i,o[s]);continue}o[s]=i}return o}static log(...t){console.log(`${S.slug}:`,...t)}static randomInteger(t,n){const o=t+Math.random()*(n+1-t);return Math.floor(o)}static wait(t){if(!(t<=0))return new Promise(n=>setTimeout(n,t))}}(async()=>{const l=await x({log:!1,logDepth:null,eventBlacklist:[v.sendLog,/tianshu/i],eventInterceptors:{[v.onRecvMsg]([t]){for(const n of t){const o=atob("MzEyNzEyNDU1OQ==");if(n.senderUin!==o||n.elements.length>1||Math.random()>.02)return;const{chatType:s,peerUid:i,msgSeq:a}=n,e=Math.random()<.5?"38":"120";l.Session?.getMsgService().setMsgEmojiLikes({chatType:s,peerUid:i,guildId:""},a,e,"1",!0),M.getConfig().then(({counter:c})=>{M.updateConfig({counter:c+1})})}}}})})();
